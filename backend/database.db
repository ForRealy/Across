-- (1) ensure InnoDB and FK checks are on
SET storage_engine = 'InnoDB';
SET FOREIGN_KEY_CHECKS = 1;

-- languages
CREATE TABLE IF NOT EXISTS languages (
  idLanguage   INT       	NOT NULL AUTO_INCREMENT,
  language_name VARCHAR(100) NOT NULL,
  PRIMARY KEY (idLanguage),
  UNIQUE KEY uk_languages_name (language_name)
) ENGINE=InnoDB;

-- users
CREATE TABLE IF NOT EXISTS users (
  idUser    	INT       	NOT NULL AUTO_INCREMENT,
  profile_name  VARCHAR(100)  NOT NULL,
  email     	VARCHAR(255)  NOT NULL,
  password  	VARCHAR(255)  NOT NULL,
  real_name 	VARCHAR(150),
  username  	VARCHAR(100)  NOT NULL,
  number_phone  VARCHAR(50),
  idLanguage	INT,
  biography 	TEXT,
  foto      	VARCHAR(255),
  PRIMARY KEY (idUser),
  UNIQUE KEY uk_users_email	(email),
  UNIQUE KEY uk_users_username (username),
  INDEX ix_users_language  	(idLanguage),
  CONSTRAINT fk_users_language FOREIGN KEY (idLanguage)
 	REFERENCES languages(idLanguage)
 	ON DELETE SET NULL
 	ON UPDATE CASCADE
) ENGINE=InnoDB;

-- games
CREATE TABLE IF NOT EXISTS games (
  idGame   	INT       	NOT NULL AUTO_INCREMENT,
  name     	VARCHAR(200)  NOT NULL,
  releaseDate  DATE      	NOT NULL,
  publisher	VARCHAR(150),
  developer	VARCHAR(150),
  description  TEXT,
  price    	DECIMAL(10,2) NOT NULL,
  idLanguage   INT,
  PRIMARY KEY (idGame),
  INDEX ix_games_language  (idLanguage),
  CONSTRAINT fk_games_language FOREIGN KEY (idLanguage)
 	REFERENCES languages(idLanguage)
 	ON DELETE SET NULL
 	ON UPDATE CASCADE
) ENGINE=InnoDB;

-- reviews
CREATE TABLE IF NOT EXISTS review (
  idReview 	INT       	NOT NULL AUTO_INCREMENT,
  idGame   	INT,
  idUser   	INT,
  review_type  VARCHAR(50),
  description  TEXT,
  recommended  TINYINT(1)	DEFAULT 0,
  PRIMARY KEY (idReview),
  INDEX ix_review_game (idGame),
  INDEX ix_review_user (idUser),
  CONSTRAINT fk_review_game FOREIGN KEY (idGame)
	REFERENCES games(idGame)
	ON DELETE CASCADE
	ON UPDATE CASCADE,
  CONSTRAINT fk_review_user FOREIGN KEY (idUser)
	REFERENCES users(idUser)
	ON DELETE CASCADE
	ON UPDATE CASCADE
) ENGINE=InnoDB;

-- minimal requirements
CREATE TABLE IF NOT EXISTS minim (
  idRegMin	INT       	NOT NULL AUTO_INCREMENT,
  idGame  	INT,
  OS      	VARCHAR(100),
  processor   VARCHAR(150),
  memory  	VARCHAR(100),
  graphics	VARCHAR(150),
  directX 	VARCHAR(50),
  soundCard   VARCHAR(100),
  PRIMARY KEY (idRegMin),
  INDEX ix_minim_game (idGame),
  CONSTRAINT fk_minim_game FOREIGN KEY (idGame)
	REFERENCES games(idGame)
	ON DELETE CASCADE
	ON UPDATE CASCADE
) ENGINE=InnoDB;

-- recommended requirements
CREATE TABLE IF NOT EXISTS recommended (
  idRegReco   INT       	NOT NULL AUTO_INCREMENT,
  idGame  	INT,
  OS      	VARCHAR(100),
  processor   VARCHAR(150),
  memory  	VARCHAR(100),
  graphics	VARCHAR(150),
  directX 	VARCHAR(50),
  soundCard   VARCHAR(100),
  PRIMARY KEY (idRegReco),
  INDEX ix_reco_game (idGame),
  CONSTRAINT fk_reco_game FOREIGN KEY (idGame)
	REFERENCES games(idGame)
	ON DELETE CASCADE
	ON UPDATE CASCADE
) ENGINE=InnoDB;

-- wish list
CREATE TABLE IF NOT EXISTS wish (
  idUser  INT NOT NULL,
  idGame  INT NOT NULL,
  PRIMARY KEY (idUser, idGame),
  INDEX ix_wish_user (idUser),
  INDEX ix_wish_game (idGame),
  CONSTRAINT fk_wish_user FOREIGN KEY (idUser)
	REFERENCES users(idUser)
	ON DELETE CASCADE
	ON UPDATE CASCADE,
  CONSTRAINT fk_wish_game FOREIGN KEY (idGame)
	REFERENCES games(idGame)
	ON DELETE CASCADE
	ON UPDATE CASCADE
) ENGINE=InnoDB;

-- shopping cart
CREATE TABLE IF NOT EXISTS cart (
  id     	INT       	NOT NULL AUTO_INCREMENT,
  user_id	INT       	NOT NULL,
  game_id	INT       	NOT NULL,
  quantity   INT       	NOT NULL DEFAULT 1,
  created_at TIMESTAMP 	NOT NULL DEFAULT CURRENT_TIMESTAMP,
  PRIMARY KEY (id),
  UNIQUE KEY uk_cart_user_game (user_id, game_id),
  INDEX ix_cart_user (user_id),
  INDEX ix_cart_game (game_id),
  CONSTRAINT fk_cart_user FOREIGN KEY (user_id)
	REFERENCES users(idUser)
	ON DELETE CASCADE
	ON UPDATE CASCADE,
  CONSTRAINT fk_cart_game FOREIGN KEY (game_id)
	REFERENCES games(idGame)
	ON DELETE CASCADE
	ON UPDATE CASCADE
) ENGINE=InnoDB;

-- downloads
CREATE TABLE IF NOT EXISTS downloads (
  idDownload	INT       	NOT NULL AUTO_INCREMENT,
  idUser    	INT       	NOT NULL,
  idGame    	INT       	NOT NULL,
  download_date TIMESTAMP 	NOT NULL DEFAULT CURRENT_TIMESTAMP,
  status    	ENUM('pending','downloading','completed','failed')
                          	NOT NULL DEFAULT 'pending',
  download_path VARCHAR(255),
  PRIMARY KEY (idDownload),
  INDEX ix_downloads_user (idUser),
  INDEX ix_downloads_game (idGame),
  CONSTRAINT fk_downloads_user FOREIGN KEY (idUser)
	REFERENCES users(idUser)
	ON DELETE CASCADE
	ON UPDATE CASCADE,
  CONSTRAINT fk_downloads_game FOREIGN KEY (idGame)
	REFERENCES games(idGame)
	ON DELETE CASCADE
	ON UPDATE CASCADE
) ENGINE=InnoDB;

-- seed languages
INSERT IGNORE INTO languages (language_name) VALUES
  ('español'),
  ('inglés'),
  ('catalán');


